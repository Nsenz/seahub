{"version":3,"sources":["components/shared-link-file-uploader/upload-list-item.js","components/shared-link-file-uploader/forbid-upload-list-item.js","components/shared-link-file-uploader/upload-progress-dialog.js","components/shared-link-file-uploader/file-uploader.js","components/dialog/save-shared-dir-dialog.js","shared-dir-view.js","components/dialog/zip-download-dialog.js","components/dialog/image-dialog.js","components/dialog/list-taggedfiles-dialog.js","models/draft.js","components/dialog/list-repo-drafts-dialog.js","components/dialog/readme-dialog.js","components/repo-info-bar.js","components/dialog/copy-move-dirent-progress-dialog.js"],"names":["UPLOAD_UPLOADING","UPLOAD_ERROR","UPLOAD_ISSAVING","UPLOAD_UPLOADED","UploadListItem","props","onUploadCancel","e","preventDefault","resumableFile","onUploadRetry","formatFileSize","size","toFixed","state","uploadState","nextProps","error","remainingTime","isSaved","this","setState","progress","Math","round","fileName","newFileName","className","title","isUploading","role","style","width","gettext","Utils","formatTime","dangerouslySetInnerHTML","__html","href","onClick","React","Component","ForbidUploadListItem","file","msg","replace","maxUploadFileSize","name","colSpan","UploadProgressDialog","onCancelAllUploading","onMinimizeUpload","nativeEvent","stopImmediatePropagation","isMinimized","onCloseUpload","onCloseUploadDialog","uploadBitrate","formatBitRate","uploadedMessage","uploadingMessage","totalProgress","uploadingOptions","uploadedOptions","allFilesUploaded","retryFileList","height","length","onUploadRetryAll","forbidUploadFileList","map","index","uploadFileList","FileUploader","componentWillUnmount","window","onbeforeunload","dragAndDrop","resumable","disableDropOnDocument","uploader","isUploadProgressDialogShow","bindCallbackHandler","minFileSizeErrorCallback","fileTypeErrorCallback","maxFilesErrorCallback","opts","maxFileSizeErrorCallback","bindEventHandler","on","onChunkingComplete","bind","onFileAdded","filesAddedComplete","onFileProgress","onFileUploadSuccess","onProgress","onComplete","onPause","onFileRetry","onFileError","onError","onBeforeCancel","onCancel","onDragStart","files","errorCount","maxFiles","maxNumberOfFilesForFileupload","message","toaster","danger","push","path","relativePath","isFile","formData","parent_dir","relative_path","slice","lastIndexOf","setUploadFileList","token","seafileAPI","sharedLinkGetFileUploadUrl","then","res","target","data","upload_link","resumableUpload","catch","errMessage","getErrorMsg","isUploadLinkLoaded","upload","repoID","getFileUploadedBytes","uploadedBytes","blockSize","parseInt","resumableUploadFileBlockSize","offset","floor","markChunksCompleted","registerGlobalVariable","getBitrate","item","uniqueIdentifier","lastSize","time","loaded","now","Date","getTime","forEach","timestamp","timeDiff","bitrateInterval","currentTime","JSON","parse","dirent","id","type","mtime","errorMessage","notifiedFolders","setHeaders","chunkSize","getOpt","fileSize","startByte","endByte","min","encodeURI","setQuery","generateUniqueIdentifier","webkitRelativePath","MD5","stopPropagation","onFileUpload","uploadInput","current","removeAttribute","click","onFolderUpload","setAttribute","uploadingItem","filter","cancel","retryUploadFile","bootstrap","firedRetry","resumableObj","uploadFile","isUploadRemindDialogShow","cancelFileUpload","pop","currentResumableFile","createRef","Resumablejs","query","fileType","filetypes","undefined","maxFileSize","testMethod","testChunks","headers","withCredentials","simultaneousUploads","fileParameterName","forceChunkSize","maxChunkRetries","minFileSize","assignBrowse","enableDropOnDocument","ref","SaveSharedDirDialog","onSaveSharedFile","handleSaveSharedDir","repo","repo_id","selectedPath","onDirentItemClick","onRepoItemClick","Modal","isOpen","ModalHeader","toggle","toggleCancel","ModalBody","isShowFile","mode","Alert","color","ModalFooter","Button","disabled","moment","locale","app","config","lang","loginUser","pageOptions","shared","dirName","dirPath","sharedBy","thumbnailSize","zipped","trafficOverLimit","canDownload","noQuota","canUpload","enableVideoThumbnail","showDownloadIcon","SharedDirView","sortItems","sortBy","sortOrder","items","sortDirentsInSharedDir","getThumbnails","is_dir","imageCheck","file_name","videoCheck","encoded_thumbnail_src","len","_this","getThumbnail","i","curItem","getShareLinkThumbnail","file_path","renderPath","Fragment","encodeURIComponent","zipDownloadFolder","folderPath","useGoFileserver","getShareLinkZipTask","zipToken","location","fileServerRoot","errorMsg","isLoading","isZipDialogOpen","zipFolderPath","zipDownloadSelectedItems","isSelected","folder_name","getShareLinkDirentsZipTask","selectedItems","saveSelectedItems","isSaveSharedDirDialogShow","itemsForSave","saveAllItems","toggleSaveSharedDirCancel","destRepoID","dstPath","saveSharedDir","isCopyMoveProgressDialogShow","asyncCopyMoveTaskId","task_id","asyncOperatedFilesLength","getAsyncCopyMoveProgress","onProgressDialogToggle","asyncOperationProgress","taskId","cancelCopyMoveOperation","closeZipDialog","prepareImageItem","isGIF","substr","toLowerCase","fileURL","siteRoot","thumbnailSizeForOriginal","encodePath","showImagePopup","imageItems","isImagePopupOpen","imageIndex","indexOf","closeImagePopup","moveToPrevImage","imageItemsLength","prevState","moveToNextImage","toggleAllSelected","isAllItemsSelected","toggleItemSelected","targetItem","some","onUploadFile","direntObject","newItem","joinPath","last_modified","format","folderItems","Array","from","splice","shareLinksUploadDone","getShareLinkRepoTags","usedRepoTags","repo_tags","usedRepoTag","RepoTag","fileCount","isRepoInfoBarShow","duration","listSharedDir","a","queryAsyncOperationProgress","failed","successful","success","total","done","isDesktop","modeBaseClass","src","mediaUrl","logoPath","logoHeight","logoWidth","siteTitle","alt","currentPath","shareLinkToken","enableFileDownload","toggleDialog","sharedToken","parentDir","Content","sortByName","sortByTime","sortBySize","tbody","sortIcon","checked","onChange","Item","toggleOpMenu","isOpMenuOpen","handleMouseOver","isIconShown","handleMouseOut","folder_path","handleFileClick","toolTipID","tagTitle","file_tags","tag_name","join","onMouseOver","onMouseOut","onFocus","getFolderIconUrl","fromNow","Dropdown","DropdownToggle","tag","DropdownItem","thumbnailURL","getFileIconUrl","fileTag","zIndex","backgroundColor","tag_color","file_tag_id","UncontrolledTooltip","placement","bytesToSize","GridItem","folderURL","ReactDom","render","document","getElementById","interval","ZipDownloadDialog","queryZipProgress","clearInterval","failed_reason","zipProgress","cancelZipTask","zipDownload","setInterval","ImageDialog","imageTitle","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","imagePadding","imageLoadErrorMessage","prevLabel","nextLabel","closeLabel","zoomInLabel","zoomOutLabel","ListTaggedFilesDialog","onFileTagChanged","TaggedFile","parent_path","filename","direntPath","onDeleteTaggedFile","taggedFile","fileTagID","deleteFileTag","getTaggedFiles","updateUsedRepoTags","file_deleted","currentTag","getShareLinkTaggedFiles","listTaggedFiles","taggedFileList","tagged_files","maxWidth","onClose","onMouseEnter","active","onMouseLeave","deleteFile","rel","unix","Draft","created","created_at","createdStr","ownerNickname","owner_nickname","originRepoID","origin_repo_id","draftFilePath","draft_file_path","ListRepoDraftsDialog","onDeleteDraftItem","draft","editorUtilities","deleteDraft","drafts","listRepoDrafts","draftItem","DraftItem","getFileName","ReadmeDialog","readmeContent","getFileDownloadLink","filePath","getFileContent","markdownContent","showTOC","scriptSource","RepoInfoBar","onListTaggedFiles","isListTaggedFileShow","onCloseDialog","toggleDrafts","showRepoDrafts","toggleReadme","showReadmeDialog","readmeMarkdown","draftCounts","CopyMoveDirentProgressDialog","progressStyle","lineHeight","textAlign","minHeight"],"mappings":"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","file":"static/js/sharedDirView.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\n\nconst propTypes = {\n  resumableFile: PropTypes.object.isRequired,\n  onUploadCancel: PropTypes.func.isRequired,\n  onUploadRetry: PropTypes.func.isRequired,\n};\n\nconst UPLOAD_UPLOADING = 'uploading';\nconst UPLOAD_ERROR = 'error';\nconst UPLOAD_ISSAVING = 'isSaving';\nconst UPLOAD_UPLOADED = 'uploaded';\n\nclass UploadListItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      uploadState: UPLOAD_UPLOADING\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let { resumableFile } = nextProps;\n    let uploadState = UPLOAD_UPLOADING;\n\n    if (resumableFile.error) {\n      uploadState = UPLOAD_ERROR;\n    } else {\n      if (resumableFile.remainingTime === 0 && !resumableFile.isSaved) {\n        uploadState = UPLOAD_ISSAVING;\n      }\n\n      if (resumableFile.isSaved) {\n        uploadState = UPLOAD_UPLOADED;\n      }\n    }\n\n    this.setState({uploadState: uploadState});\n  }\n\n  onUploadCancel = (e) => {\n    e.preventDefault();\n    this.props.onUploadCancel(this.props.resumableFile);\n  }\n\n  onUploadRetry = (e) => {\n    e.preventDefault();\n    this.props.onUploadRetry(this.props.resumableFile);\n  }\n\n  formatFileSize = (size) => {\n    if (typeof size !== 'number') {\n      return '';\n    }\n    if (size >= 1000 * 1000 * 1000) {\n      return (size / (1000 * 1000 * 1000)).toFixed(1) + ' G';\n    }\n    if (size >= 1000 * 1000) {\n      return (size / (1000 * 1000)).toFixed(1) + ' M';\n    }\n    if (size >= 1000) {\n      return (size / 1000).toFixed(1) + ' K';\n    }\n    return size.toFixed(1) + ' B';\n  }\n\n  render() {\n    let { resumableFile } = this.props;\n    let progress = Math.round(resumableFile.progress() * 100);\n    let error = resumableFile.error;\n\n    const fileName = resumableFile.newFileName;\n    const size = this.formatFileSize(resumableFile.size);\n\n    return (\n      <tr className=\"file-upload-item\">\n        <td className=\"upload-name\">\n          <div className=\"ellipsis\" title={fileName}>{fileName}</div>\n        </td>\n        <td className=\"ellipsis\">\n          <span className=\"file-size\" title={size}>{size}</span>\n        </td>\n        <td className=\"upload-progress ellipsis\">\n          {(this.state.uploadState === UPLOAD_UPLOADING || this.state.uploadState === UPLOAD_ISSAVING) &&\n            <Fragment>\n              {resumableFile.size >= (100 * 1000 * 1000) &&\n                <Fragment>\n                  {resumableFile.isUploading() && (\n                    <div className=\"progress-container\">\n                      <div className=\"progress\">\n                        <div className=\"progress-bar\" role=\"progressbar\" style={{width: `${progress}%`}} aria-valuenow={progress} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                      </div>\n                      {(resumableFile.remainingTime === -1) && <div className=\"progress-text\">{gettext('Preparing to upload...')}</div>}\n                      {(resumableFile.remainingTime > 0) && <div className=\"progress-text\">{gettext('Remaining')}{' '}{Utils.formatTime(resumableFile.remainingTime)}</div>}\n                      {(resumableFile.remainingTime === 0) && <div className=\"progress-text\">{gettext('Indexing...')}</div>}\n                    </div>\n                  )}\n                  {!resumableFile.isUploading() && (\n                    <div className=\"progress-container d-flex align-items-center\">\n                      <div className=\"progress\">\n                        <div className=\"progress-bar\" role=\"progressbar\" style={{width: `${progress}%`}} aria-valuenow={progress} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                      </div>\n                    </div>\n                  )}\n                </Fragment>\n              }\n              {(resumableFile.size < (100 * 1000 * 1000)) &&\n                <div className=\"progress-container d-flex align-items-center\">\n                  <div className=\"progress\">\n                    <div className=\"progress-bar\" role=\"progressbar\" style={{width: `${progress}%`}} aria-valuenow={progress} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                  </div>\n                </div>\n              }\n            </Fragment>\n          }\n          {this.state.uploadState === UPLOAD_ERROR && (\n            <div className=\"message err-message ml-0\" dangerouslySetInnerHTML={{__html: error}}></div>\n          )}\n        </td>\n        <td className=\"upload-operation ellipsis\">\n          <Fragment>\n            {this.state.uploadState === UPLOAD_UPLOADING && (\n              <a href=\"#\" onClick={this.onUploadCancel}>{gettext('Cancel')}</a>\n            )}\n            {this.state.uploadState === UPLOAD_ERROR && (\n              <a href=\"#\" onClick={this.onUploadRetry}>{gettext('Retry')}</a>\n            )}\n            {this.state.uploadState === UPLOAD_ISSAVING && (\n              <span className=\"saving\">{gettext('Saving...')}</span>\n            )}\n            {this.state.uploadState === UPLOAD_UPLOADED && (\n              <span className=\"uploaded\">{gettext('Uploaded')}</span>\n            )}\n          </Fragment>\n        </td>\n      </tr>\n    );\n  }\n}\n\nUploadListItem.propTypes = propTypes;\n\nexport default UploadListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext, maxUploadFileSize } from '../../utils/constants';\n\nconst propTypes = {\n  file: PropTypes.object,\n};\n\nclass ForbidUploadListItem extends React.Component {\n\n  render() {\n    let { file } = this.props;\n    let msg = gettext('Please upload files less than {placeholder}M').replace('{placeholder}', maxUploadFileSize);\n    return (\n      <tr className=\"file-upload-item\">\n        <td className=\"upload-name\">\n          <div className=\"ellipsis\" title={file.name}>{file.name}</div>\n        </td>\n\n        <td colSpan={3} className=\"error\">{msg}</td>\n      </tr>\n    );\n  }\n}\n\nForbidUploadListItem.propTypes = propTypes;\n\nexport default ForbidUploadListItem;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\nimport UploadListItem from './upload-list-item';\nimport ForbidUploadListItem from './forbid-upload-list-item';\n\nconst propTypes = {\n  uploadBitrate: PropTypes.number.isRequired,\n  totalProgress: PropTypes.number.isRequired,\n  retryFileList: PropTypes.array.isRequired,\n  uploadFileList: PropTypes.array.isRequired,\n  forbidUploadFileList: PropTypes.array.isRequired,\n  onCloseUploadDialog: PropTypes.func.isRequired,\n  onCancelAllUploading: PropTypes.func.isRequired,\n  onUploadCancel: PropTypes.func.isRequired,\n  onUploadRetry: PropTypes.func.isRequired,\n  onUploadRetryAll: PropTypes.func.isRequired,\n  allFilesUploaded: PropTypes.bool.isRequired,\n};\n\nclass UploadProgressDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMinimized: false\n    };\n  }\n\n  onCancelAllUploading = () => {\n    this.props.onCancelAllUploading();\n  }\n\n  onMinimizeUpload = (e) => {\n    e.nativeEvent.stopImmediatePropagation();\n    this.setState({isMinimized: !this.state.isMinimized});\n  }\n\n  onCloseUpload = (e) => {\n    e.nativeEvent.stopImmediatePropagation();\n    this.props.onCloseUploadDialog();\n  }\n\n  render() {\n\n    let uploadBitrate = Utils.formatBitRate(this.props.uploadBitrate);\n    let uploadedMessage = gettext('File Upload');\n    let uploadingMessage = gettext('File Uploading...') + ' ' + this.props.totalProgress + '% (' + uploadBitrate + ')';\n\n    let uploadingOptions = (<span className=\"sf2-icon-minus\" onClick={this.onMinimizeUpload}></span>);\n\n    let uploadedOptions = (\n      <Fragment>\n        <span className=\"sf2-icon-minus\" onClick={this.onMinimizeUpload}></span>\n        <span className=\"sf2-icon-x1\" onClick={this.onCloseUpload}></span>\n      </Fragment>\n    );\n\n    let { totalProgress, allFilesUploaded, retryFileList } = this.props;\n\n    return (\n      <div className=\"uploader-list-view mw-100\" style={{height: this.state.isMinimized ? '2.25rem' : '20rem'}}>\n        <div className=\"uploader-list-header\">\n          <div className=\"title\">\n            {totalProgress === 100 ? uploadedMessage : uploadingMessage}\n          </div>\n          <div className=\"uploader-options\">\n            {totalProgress === 100 ||  allFilesUploaded ? uploadedOptions : uploadingOptions}\n          </div>\n        </div>\n        <div className=\"uploader-list-content\">\n          <div className=\"text-right mt-2\">\n            {retryFileList.length > 0 ?\n              <span className=\"cursor-pointer\" onClick={this.props.onUploadRetryAll}>{gettext('Retry All')}</span>\n              :\n              <span className=\"cursor-pointer disabled-link\">{gettext('Retry All')}</span>\n            }\n            {!allFilesUploaded ?\n              <span className=\"cursor-pointer ml-3\" onClick={this.onCancelAllUploading}>{gettext('Cancel All')}</span>\n              :\n              <span className=\"cursor-pointer ml-3 disabled-link\" >{gettext('Cancel All')}</span>\n            }\n          </div>\n          <table className=\"table-thead-hidden\">\n            <thead>\n              <tr>\n                <th width=\"30%\">{gettext('name')}</th>\n                <th width=\"20%\">{gettext('size')}</th>\n                <th width=\"30%\">{gettext('progress')}</th>\n                <th width=\"20%\">{gettext('state')}</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                this.props.forbidUploadFileList.map((file, index) => {\n                  return (<ForbidUploadListItem key={index} file={file} />);\n                })\n              }\n              {\n                this.props.uploadFileList.map((resumableFile, index) => {\n                  return (\n                    <UploadListItem\n                      key={index}\n                      resumableFile={resumableFile}\n                      onUploadCancel={this.props.onUploadCancel}\n                      onUploadRetry={this.props.onUploadRetry}\n                    />\n                  );\n                })\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nUploadProgressDialog.propTypes = propTypes;\n\nexport default UploadProgressDialog;\n","// the parent folder of this file is copied from components/file-uploader\n// this file is modified according to the requirements of 'file upload' in 'shared dir link'\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Resumablejs from '@seafile/resumablejs';\nimport MD5 from 'MD5';\nimport { resumableUploadFileBlockSize, maxUploadFileSize, maxNumberOfFilesForFileupload } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport { gettext } from '../../utils/constants';\nimport UploadProgressDialog from './upload-progress-dialog';\nimport toaster from '../toast';\nimport '../../css/file-uploader.css';\n\nconst propTypes = {\n  token: PropTypes.string.isRequired,\n  repoID: PropTypes.string.isRequired,\n  //direntList: PropTypes.array.isRequired,\n  filetypes: PropTypes.array,\n  chunkSize: PropTypes.number,\n  withCredentials: PropTypes.bool,\n  testMethod: PropTypes.string,\n  testChunks: PropTypes.number,\n  simultaneousUploads: PropTypes.number,\n  fileParameterName: PropTypes.string,\n  minFileSizeErrorCallback: PropTypes.func,\n  fileTypeErrorCallback: PropTypes.func,\n  dragAndDrop: PropTypes.bool.isRequired,\n  path: PropTypes.string.isRequired,\n  relativePath: PropTypes.string.isRequired,\n  onFileUploadSuccess: PropTypes.func.isRequired\n};\n\nclass FileUploader extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      retryFileList: [],\n      uploadFileList: [],\n      forbidUploadFileList: [],\n      totalProgress: 0,\n      isUploadProgressDialogShow: false,\n      isUploadRemindDialogShow: false,\n      currentResumableFile: null,\n      uploadBitrate: 0,\n      allFilesUploaded: false,\n    };\n\n    this.uploadInput = React.createRef();\n\n    this.notifiedFolders = [];\n\n    this.timestamp = null;\n    this.loaded = 0;\n    this.bitrateInterval = 500; // Interval in milliseconds to calculate the bitrate\n    window.onbeforeunload = this.onbeforeunload;\n    this.isUploadLinkLoaded = false;\n  }\n\n  componentDidMount() {\n    this.resumable = new Resumablejs({\n      target: '',\n      query: this.setQuery || {},\n      fileType: this.props.filetypes,\n      maxFiles: maxNumberOfFilesForFileupload || undefined,\n      maxFileSize: maxUploadFileSize * 1000 * 1000 || undefined,\n      testMethod: this.props.testMethod || 'post',\n      testChunks: this.props.testChunks || false,\n      headers: this.setHeaders || {},\n      withCredentials: this.props.withCredentials || false,\n      chunkSize: parseInt(resumableUploadFileBlockSize) * 1024 * 1024 || 1 * 1024 * 1024,\n      simultaneousUploads: this.props.simultaneousUploads || 1,\n      fileParameterName: this.props.fileParameterName,\n      generateUniqueIdentifier: this.generateUniqueIdentifier,\n      forceChunkSize: true,\n      maxChunkRetries: 3,\n      minFileSize: 0,\n    });\n\n    this.resumable.assignBrowse(this.uploadInput.current, true);\n\n    //Enable or Disable DragAnd Drop\n    if (this.props.dragAndDrop === true) {\n      this.resumable.enableDropOnDocument();\n    }\n\n    this.bindCallbackHandler();\n    this.bindEventHandler();\n  }\n\n  componentWillUnmount = () => {\n    window.onbeforeunload = null;\n    if (this.props.dragAndDrop === true) {\n      this.resumable.disableDropOnDocument();\n    }\n  }\n\n  onbeforeunload = () => {\n    if (window.uploader &&\n        window.uploader.isUploadProgressDialogShow &&\n        window.uploader.totalProgress !== 100) {\n      return '';\n    }\n  }\n\n  bindCallbackHandler = () => {\n    let { minFileSizeErrorCallback, fileTypeErrorCallback } = this.props;\n\n    if (this.maxFilesErrorCallback) {\n      this.resumable.opts.maxFilesErrorCallback = this.maxFilesErrorCallback;\n    }\n\n    if (minFileSizeErrorCallback) {\n      this.resumable.opts.minFileSizeErrorCallback = this.props.minFileSizeErrorCallback;\n    }\n\n    if (this.maxFileSizeErrorCallback) {\n      this.resumable.opts.maxFileSizeErrorCallback = this.maxFileSizeErrorCallback;\n    }\n\n    if (fileTypeErrorCallback) {\n      this.resumable.opts.fileTypeErrorCallback = this.props.fileTypeErrorCallback;\n    }\n\n  }\n\n  bindEventHandler = () => {\n    this.resumable.on('chunkingComplete', this.onChunkingComplete.bind(this));\n    this.resumable.on('fileAdded', this.onFileAdded.bind(this));\n    this.resumable.on('filesAddedComplete', this.filesAddedComplete.bind(this));\n    this.resumable.on('fileProgress', this.onFileProgress.bind(this));\n    this.resumable.on('fileSuccess', this.onFileUploadSuccess.bind(this));\n    this.resumable.on('progress', this.onProgress.bind(this));\n    this.resumable.on('complete', this.onComplete.bind(this));\n    this.resumable.on('pause', this.onPause.bind(this));\n    this.resumable.on('fileRetry', this.onFileRetry.bind(this));\n    this.resumable.on('fileError', this.onFileError.bind(this));\n    this.resumable.on('error', this.onError.bind(this));\n    this.resumable.on('beforeCancel', this.onBeforeCancel.bind(this));\n    this.resumable.on('cancel', this.onCancel.bind(this));\n    this.resumable.on('dragstart', this.onDragStart.bind(this));\n  }\n\n  maxFilesErrorCallback = (files, errorCount) => {\n    let maxFiles = maxNumberOfFilesForFileupload;\n    let message = gettext('Please upload no more than {maxFiles} files at a time.');\n    message = message.replace('{maxFiles}', maxFiles);\n    toaster.danger(message);\n  }\n\n  maxFileSizeErrorCallback = (file) => {\n    let { forbidUploadFileList } = this.state;\n    forbidUploadFileList.push(file);\n    this.setState({forbidUploadFileList: forbidUploadFileList});\n  }\n\n  onChunkingComplete = (resumableFile) => {\n\n    let allFilesUploaded = this.state.allFilesUploaded;\n    if (allFilesUploaded === true) {\n      this.setState({allFilesUploaded: false});\n    }\n\n    //get parent_dir relative_path\n    let path = this.props.path === '/' ? '/' : this.props.path + '/';\n    let fileName = resumableFile.fileName;\n    let relativePath = resumableFile.relativePath;\n    let isFile = fileName === relativePath;\n\n    //update formdata\n    resumableFile.formData = {};\n    if (isFile) { // upload file\n      resumableFile.formData  = {\n        parent_dir: path,\n      };\n    } else { // upload folder\n      let relative_path = relativePath.slice(0, relativePath.lastIndexOf('/') + 1);\n      resumableFile.formData  = {\n        parent_dir: path,\n        relative_path: relative_path\n      };\n    }\n  }\n\n  onFileAdded = (resumableFile, files) => {\n    let isFile = resumableFile.fileName === resumableFile.relativePath;\n    // uploading is file and only upload one file\n    if (isFile && files.length === 1) {\n      let hasRepetition = false;\n      /*\n      let direntList = this.props.direntList;\n      for (let i = 0; i < direntList.length; i++) {\n        if (direntList[i].type === 'file' && direntList[i].name === resumableFile.fileName) {\n          hasRepetition = true;\n          break;\n        }\n      }\n      */\n      if (hasRepetition) {\n        this.setState({\n          isUploadRemindDialogShow: true,\n          currentResumableFile: resumableFile,\n        });\n      } else {\n        this.setUploadFileList(this.resumable.files);\n        let { token, relativePath } = this.props;\n        seafileAPI.sharedLinkGetFileUploadUrl(token, relativePath).then(res => {\n          this.resumable.opts.target = res.data.upload_link + '?ret-json=1';\n          this.resumableUpload(resumableFile);\n        }).catch(error => {\n          let errMessage = Utils.getErrorMsg(error);\n          toaster.danger(errMessage);\n        });\n      }\n    } else {\n      this.setUploadFileList(this.resumable.files);\n      if (!this.isUploadLinkLoaded) {\n        this.isUploadLinkLoaded = true;\n        let { token, relativePath } = this.props;\n        seafileAPI.sharedLinkGetFileUploadUrl(token, relativePath).then(res => {\n          this.resumable.opts.target = res.data.upload_link + '?ret-json=1';\n          this.resumable.upload();\n        }).catch(error => {\n          let errMessage = Utils.getErrorMsg(error);\n          toaster.danger(errMessage);\n        });\n      }\n    }\n  }\n\n  resumableUpload = (resumableFile) => {\n    let { repoID, path } = this.props;\n    seafileAPI.getFileUploadedBytes(repoID, path, resumableFile.fileName).then(res => {\n      let uploadedBytes = res.data.uploadedBytes;\n      let blockSize = parseInt(resumableUploadFileBlockSize) * 1024 * 1024 || 1024 * 1024;\n      let offset = Math.floor(uploadedBytes / blockSize);\n      resumableFile.markChunksCompleted(offset);\n      this.resumable.upload();\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  filesAddedComplete = (resumable, files) => {\n    let { forbidUploadFileList } = this.state;\n    if (forbidUploadFileList.length > 0 && files.length === 0) {\n      this.setState({\n        isUploadProgressDialogShow: true,\n        totalProgress: 100\n      });\n    }\n  }\n\n  setUploadFileList = () => {\n    let uploadFileList = this.resumable.files;\n    this.setState({\n      uploadFileList: uploadFileList,\n      isUploadProgressDialogShow: true,\n    });\n    Utils.registerGlobalVariable('uploader', 'isUploadProgressDialogShow', true);\n  }\n\n  onFileProgress = (resumableFile) => {\n    let uploadBitrate = this.getBitrate();\n    let uploadFileList = this.state.uploadFileList.map(item => {\n      if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n        if (uploadBitrate) {\n          let lastSize = (item.size - (item.size * item.progress())) * 8;\n          let time = Math.floor(lastSize / uploadBitrate);\n          item.remainingTime = time;\n        }\n      }\n      return item;\n    });\n\n    this.setState({\n      uploadBitrate: uploadBitrate,\n      uploadFileList: uploadFileList\n    });\n  }\n\n  getBitrate = () => {\n    let loaded = 0;\n    let uploadBitrate = 0;\n    let now = new Date().getTime();\n\n    this.resumable.files.forEach(file => {\n      loaded += file.progress() * file.size;\n    });\n\n    if (this.timestamp) {\n      let timeDiff = (now - this.timestamp);\n      if (timeDiff < this.bitrateInterval) {\n        return this.state.uploadBitrate;\n      }\n\n      // 1. Cancel will produce loaded greater than this.loaded\n      // 2. reset can make this.loaded to be 0\n      if (loaded < this.loaded || this.loaded === 0) {\n        this.loaded = loaded; //\n      }\n\n      uploadBitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;\n    }\n\n    this.timestamp = now;\n    this.loaded = loaded;\n\n    return uploadBitrate;\n  }\n\n  onProgress = () => {\n    let progress = Math.round(this.resumable.progress() * 100);\n    this.setState({totalProgress: progress});\n    Utils.registerGlobalVariable('uploader', 'totalProgress', progress);\n  }\n\n  onFileUploadSuccess = (resumableFile, message) => {\n    let formData = resumableFile.formData;\n    let currentTime = new Date().getTime()/1000;\n    message = formData.replace ? message : JSON.parse(message)[0];\n    if (formData.relative_path) { // upload folder\n      // 'upload folder' is not supported\n      /*\n      let relative_path = formData.relative_path;\n      let dir_name = relative_path.slice(0, relative_path.indexOf('/'));\n      let dirent = {\n        id: message.id,\n        name: dir_name,\n        type: 'dir',\n        mtime: currentTime,\n      };\n\n      // update folders cache\n      let isExist = this.notifiedFolders.some(item => {return item.name === dirent.name;});\n      if (!isExist) {\n        this.notifiedFolders.push(dirent);\n        this.props.onFileUploadSuccess(dirent);\n      }\n\n      // update uploadFileList\n      let uploadFileList = this.state.uploadFileList.map(item => {\n        if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n          item.newFileName = relative_path + message.name;\n          item.isSaved = true;\n        }\n        return item;\n      });\n      this.setState({uploadFileList: uploadFileList});\n\n      return;\n      */\n    }\n\n    // replacing file is not allowed in shared link with 'can_upload' permission\n    /*\n    if (formData.replace) { // upload file -- replace exist file\n      let fileName = resumableFile.fileName;\n      let dirent = {\n        id: message,\n        name: fileName,\n        type: 'file',\n        mtime: currentTime\n      };\n      this.props.onFileUploadSuccess(dirent); // this contance: just one file\n\n      let uploadFileList = this.state.uploadFileList.map(item => {\n        if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n          item.newFileName = fileName;\n          item.isSaved = true;\n        }\n        return item;\n      });\n      this.setState({uploadFileList: uploadFileList});\n\n      return;\n    }\n    */\n\n    // upload file -- add files\n    let dirent = {\n      id: message.id,\n      type: 'file',\n      name: message.name,\n      size: message.size,\n      mtime: currentTime,\n    };\n    this.props.onFileUploadSuccess(dirent); // this contance:  no repetition file\n\n    let uploadFileList = this.state.uploadFileList.map(item => {\n      if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n        item.newFileName = message.name;\n        item.isSaved = true;\n      }\n      return item;\n    });\n    this.setState({uploadFileList: uploadFileList});\n  }\n\n  onFileError = (resumableFile, message) => {\n    let error = '';\n    if (!message) {\n      error = gettext('Network error');\n    } else {\n      // eg: '{\"error\": \"Internal error\" \\n }'\n      let errorMessage = message.replace(/\\n/g, '');\n      errorMessage  = JSON.parse(errorMessage);\n      error = errorMessage.error;\n      if (error === 'File locked by others.') {\n        error = gettext('File is locked by others.');\n      }\n      if (error === 'Internal error.') {\n        error = gettext('Internal Server Error');\n      }\n    }\n\n    let uploadFileList = this.state.uploadFileList.map(item => {\n      if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n        this.state.retryFileList.push(item);\n        item.error = error;\n      }\n      return item;\n    });\n\n    this.loaded = 0;  // reset loaded data;\n    this.setState({\n      retryFileList: this.state.retryFileList,\n      uploadFileList: uploadFileList\n    });\n\n  }\n\n  onComplete = () => {\n    this.notifiedFolders = [];\n    // reset upload link loaded\n    this.isUploadLinkLoaded = false;\n    this.setState({allFilesUploaded: true});\n  }\n\n  onPause = () => {\n\n  }\n\n  onError = (message) => {\n    // reset upload link loaded\n    this.isUploadLinkLoaded = false;\n    // After the error, the user can switch windows\n    Utils.registerGlobalVariable('uploader', 'totalProgress', 100);\n  }\n\n  onFileRetry = () => {\n    // todo, cancel upload file, uploded again;\n  }\n\n  onBeforeCancel = () => {\n    // todo, giving a pop message ?\n  }\n\n  onCancel = () => {\n\n  }\n\n  setHeaders = (resumableFile, resumable) => {\n    let offset = resumable.offset;\n    let chunkSize = resumable.getOpt('chunkSize');\n    let fileSize = resumableFile.size === 0 ? 1 : resumableFile.size;\n    let startByte = offset !== 0 ? offset * chunkSize : 0;\n    let endByte = Math.min(fileSize, (offset + 1) * chunkSize) - 1;\n\n    if (fileSize - resumable.endByte < chunkSize && !resumable.getOpt('forceChunkSize')) {\n      endByte = fileSize;\n    }\n\n    let headers = {\n      'Accept': 'application/json; text/javascript, */*; q=0.01',\n      'Content-Disposition': 'attachment; filename=\"' + encodeURI(resumableFile.fileName) + '\"',\n      'Content-Range': 'bytes ' + startByte + '-' + endByte + '/' + fileSize,\n    };\n\n    return headers;\n  }\n\n  setQuery = (resumableFile) => {\n    let formData = resumableFile.formData;\n    return formData;\n  }\n\n  generateUniqueIdentifier = (file) => {\n    let relativePath = file.webkitRelativePath||file.relativePath||file.fileName||file.name;\n    return MD5(relativePath + new Date()) + relativePath;\n  }\n\n  onClick = (e) => {\n    e.nativeEvent.stopImmediatePropagation();\n    e.stopPropagation();\n  }\n\n  onFileUpload = () => {\n    this.uploadInput.current.removeAttribute('webkitdirectory');\n\n    this.uploadInput.current.click();\n  }\n\n  onFolderUpload = () => {\n    this.uploadInput.current.setAttribute('webkitdirectory', 'webkitdirectory');\n    this.uploadInput.current.click();\n  }\n\n  onDragStart = () => {\n    this.uploadInput.current.setAttribute('webkitdirectory', 'webkitdirectory');\n  }\n\n  onCloseUploadDialog = () => {\n    this.loaded = 0;\n    this.resumable.files = [];\n    // reset upload link loaded\n    this.isUploadLinkLoaded = false;\n    this.setState({isUploadProgressDialogShow: false, uploadFileList: [], forbidUploadFileList: []});\n    Utils.registerGlobalVariable('uploader', 'isUploadProgressDialogShow', false);\n  }\n\n  onUploadCancel = (uploadingItem) => {\n\n    let uploadFileList = this.state.uploadFileList.filter(item => {\n      if (item.uniqueIdentifier === uploadingItem.uniqueIdentifier) {\n        item.cancel(); // execute cancel function will delete the file at the same time\n        return false;\n      }\n      return true;\n    });\n\n    if (!this.resumable.isUploading()) {\n      this.setState({\n        totalProgress: '100',\n        allFilesUploaded: true,\n      });\n      this.loaded = 0;\n    }\n\n    this.setState({uploadFileList: uploadFileList});\n  }\n\n  onCancelAllUploading = () => {\n    let uploadFileList = this.state.uploadFileList.filter(item => {\n      if (Math.round(item.progress() !== 1)) {\n        item.cancel();\n        return false;\n      }\n      return true;\n    });\n\n    this.loaded = 0;\n\n    this.setState({\n      allFilesUploaded: true,\n      totalProgress: '100',\n      uploadFileList: uploadFileList\n    });\n    // reset upload link loaded\n    this.isUploadLinkLoaded = false;\n  }\n\n  onUploadRetry = (resumableFile) => {\n\n    let { token, relativePath } = this.props;\n    seafileAPI.sharedLinkGetFileUploadUrl(token, relativePath).then(res => {\n      this.resumable.opts.target = res.data.upload_link + '?ret-json=1';\n\n      let retryFileList = this.state.retryFileList.filter(item => {\n        return item.uniqueIdentifier !== resumableFile.uniqueIdentifier;\n      });\n      let uploadFileList = this.state.uploadFileList.map(item => {\n        if (item.uniqueIdentifier === resumableFile.uniqueIdentifier) {\n          item.error = null;\n          this.retryUploadFile(item);\n        }\n        return item;\n      });\n\n      this.setState({\n        retryFileList: retryFileList,\n        uploadFileList: uploadFileList\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  onUploadRetryAll = () => {\n\n    let { token, relativePath } = this.props;\n    seafileAPI.sharedLinkGetFileUploadUrl(token, relativePath).then(res => {\n      this.resumable.opts.target = res.data.upload_link + '?ret-json=1';\n      this.state.retryFileList.forEach(item => {\n        item.error = false;\n        this.retryUploadFile(item);\n      });\n\n      let uploadFileList = this.state.uploadFileList.slice(0);\n      this.setState({\n        retryFileList: [],\n        uploadFileList: uploadFileList\n      });\n\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  retryUploadFile = (resumableFile) => {\n    let { repoID, path } = this.props;\n    let fileName = resumableFile.fileName;\n    let isFile = resumableFile.fileName === resumableFile.relativePath;\n    if (!isFile) {\n      let relative_path = resumableFile.formData.relative_path;\n      let prefix = path === '/' ? (path + relative_path) : (path + '/' + relative_path);\n      fileName = prefix + fileName;\n    }\n\n    resumableFile.bootstrap();\n    var firedRetry = false;\n    resumableFile.resumableObj.on('chunkingComplete', () => {\n      if(!firedRetry) {\n        seafileAPI.getFileUploadedBytes(repoID, path, fileName).then(res => {\n          let uploadedBytes = res.data.uploadedBytes;\n          let blockSize = parseInt(resumableUploadFileBlockSize) * 1024 * 1024 || 1024 * 1024;\n          let offset = Math.floor(uploadedBytes / blockSize);\n          resumableFile.markChunksCompleted(offset);\n\n          resumableFile.resumableObj.upload();\n\n        }).catch(error => {\n          let errMessage = Utils.getErrorMsg(error);\n          toaster.danger(errMessage);\n        });\n      }\n      firedRetry = true;\n    });\n  }\n\n  uploadFile = () => {\n    let resumableFile = this.resumable.files[this.resumable.files.length - 1];\n\n    let { token, relativePath } = this.props;\n    seafileAPI.sharedLinkGetFileUploadUrl(token, relativePath).then(res => {\n      this.resumable.opts.target = res.data.upload_link + '?ret-json=1';\n      this.setState({\n        isUploadRemindDialogShow: false,\n        isUploadProgressDialogShow: true,\n        uploadFileList: [...this.state.uploadFileList, resumableFile]\n      }, () => {\n        this.resumable.upload();\n      });\n      Utils.registerGlobalVariable('uploader', 'isUploadProgressDialogShow', true);\n\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  cancelFileUpload = () => {\n    this.resumable.files.pop(); //delete latest file；\n    this.setState({isUploadRemindDialogShow: false});\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"file-uploader-container\">\n          <div className=\"file-uploader\">\n            <input className=\"upload-input\" type=\"file\" ref={this.uploadInput} onClick={this.onClick}/>\n          </div>\n        </div>\n        {this.state.isUploadProgressDialogShow &&\n          <UploadProgressDialog\n            retryFileList={this.state.retryFileList}\n            uploadFileList={this.state.uploadFileList}\n            forbidUploadFileList={this.state.forbidUploadFileList}\n            totalProgress={this.state.totalProgress}\n            uploadBitrate={this.state.uploadBitrate}\n            allFilesUploaded={this.state.allFilesUploaded}\n            onCloseUploadDialog={this.onCloseUploadDialog}\n            onCancelAllUploading={this.onCancelAllUploading}\n            onUploadCancel={this.onUploadCancel}\n            onUploadRetry={this.onUploadRetry}\n            onUploadRetryAll={this.onUploadRetryAll}\n          />\n        }\n      </Fragment>\n    );\n  }\n}\n\nFileUploader.propTypes = propTypes;\n\nexport default FileUploader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Alert } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport FileChooser from '../file-chooser/file-chooser';\nimport { Utils } from '../../utils/utils';\n\nconst propTypes = {\n  sharedToken: PropTypes.string.isRequired,\n  parentDir: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired,\n  toggleCancel: PropTypes.func.isRequired,\n  handleSaveSharedDir: PropTypes.func.isRequired,\n};\n\nclass SaveSharedDirDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      repo: null,\n      selectedPath: '',\n      errMessage: '',\n    };\n  }\n\n  onSaveSharedFile = () => {\n    this.props.handleSaveSharedDir(this.state.repo.repo_id, this.state.selectedPath)\n  }\n\n  onDirentItemClick = (repo, selectedPath, dirent) => {\n    if (dirent.type === 'dir') {\n      this.setState({\n        repo: repo,\n        selectedPath: selectedPath,\n      });\n    }\n    else {\n      this.setState({\n        repo: null,\n        selectedPath: '',\n      });\n    }\n  }\n\n  onRepoItemClick = (repo) => {\n    this.setState({\n      repo: repo,\n      selectedPath: '/',\n    });\n  }\n\n  render() {\n    return (\n      <Modal isOpen={true} className=\"sf-save-file\">\n        <ModalHeader toggle={this.props.toggleCancel}>{gettext('Save to:')}</ModalHeader>\n        <ModalBody>\n          <FileChooser\n            isShowFile={false}\n            onDirentItemClick={this.onDirentItemClick}\n            onRepoItemClick={this.onRepoItemClick}\n            mode=\"only_all_repos\"\n          />\n          {this.state.errMessage && <Alert color=\"danger\">{this.state.errMessage}</Alert>}\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.props.toggleCancel}>{gettext('Cancel')}</Button>\n          { this.state.selectedPath ?\n            <Button color=\"primary\" onClick={this.onSaveSharedFile}>{gettext('Submit')}</Button>\n            :\n            <Button color=\"primary\" disabled>{gettext('Submit')}</Button>\n          }\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nSaveSharedDirDialog.propTypes = propTypes;\n\nexport default SaveSharedDirDialog;\n","import React, { Fragment } from 'react';\nimport MD5 from 'MD5';\nimport ReactDom from 'react-dom';\nimport { Button, Dropdown, DropdownToggle, DropdownItem, UncontrolledTooltip } from 'reactstrap';\nimport moment from 'moment';\nimport Account from './components/common/account';\nimport { useGoFileserver, fileServerRoot, gettext, siteRoot, mediaUrl, logoPath, logoWidth, logoHeight, siteTitle, thumbnailSizeForOriginal } from './utils/constants';\nimport { Utils } from './utils/utils';\nimport { seafileAPI } from './utils/seafile-api';\nimport Loading from './components/loading';\nimport toaster from './components/toast';\nimport ModalPortal from './components/modal-portal';\nimport ZipDownloadDialog from './components/dialog/zip-download-dialog';\nimport ImageDialog from './components/dialog/image-dialog';\nimport FileUploader from './components/shared-link-file-uploader/file-uploader';\nimport SaveSharedDirDialog from './components/dialog/save-shared-dir-dialog';\nimport CopyMoveDirentProgressDialog from './components/dialog/copy-move-dirent-progress-dialog';\nimport RepoInfoBar from './components/repo-info-bar';\nimport RepoTag from './models/repo-tag';\n\nimport './css/shared-dir-view.css';\nimport './css/grid-view.css';\n\nmoment.locale(window.app.config.lang);\n\nlet loginUser = window.app.pageOptions.name;\nlet {\n  token, dirName, dirPath, sharedBy,\n  repoID, relativePath,\n  mode, thumbnailSize, zipped,\n  trafficOverLimit, canDownload,\n  noQuota, canUpload, enableVideoThumbnail\n} = window.shared.pageOptions;\n\nconst showDownloadIcon = !trafficOverLimit && canDownload;\n\nclass SharedDirView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      errorMsg: '',\n      items: [],\n\n      isAllItemsSelected: false,\n      selectedItems: [],\n\n      sortBy: 'name', // 'name' or 'time' or 'size'\n      sortOrder: 'asc', // 'asc' or 'desc'\n\n      isZipDialogOpen: false,\n      zipFolderPath: '',\n\n      usedRepoTags: [],\n      isRepoInfoBarShow: false,\n\n      isSaveSharedDirDialogShow: false,\n      itemsForSave: [],\n\n      asyncCopyMoveTaskId: '',\n      asyncOperationProgress: 0,\n      asyncOperatedFilesLength: 0,\n      isCopyMoveProgressDialogShow: false,\n\n      isImagePopupOpen: false,\n      imageItems: [],\n      imageIndex: 0\n    };\n  }\n\n  componentDidMount() {\n    if (trafficOverLimit) {\n      toaster.danger(gettext('File download is disabled: the share link traffic of owner is used up.'), {\n        duration: 3\n      });\n    }\n\n    seafileAPI.listSharedDir(token, relativePath, thumbnailSize).then((res) => {\n      const items = res.data['dirent_list'].map(item => {\n        item.isSelected = false;\n        return item;\n      });\n      this.setState({\n        isLoading: false,\n        errorMsg: '',\n        items: Utils.sortDirentsInSharedDir(items, this.state.sortBy, this.state.sortOrder)\n      });\n      this.getThumbnails();\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      this.setState({\n        isLoading: false,\n        errorMsg: errorMsg\n      });\n    });\n\n    this.getShareLinkRepoTags();\n  }\n\n  sortItems = (sortBy, sortOrder) => {\n    this.setState({\n      sortBy: sortBy,\n      sortOrder: sortOrder,\n      items: Utils.sortDirentsInSharedDir(this.state.items, sortBy, sortOrder)\n    });\n  }\n\n  getThumbnails = () => {\n    let items = this.state.items.filter((item) => {\n      return !item.is_dir &&\n        (Utils.imageCheck(item.file_name) ||\n        (enableVideoThumbnail && Utils.videoCheck(item.file_name))) &&\n        !item.encoded_thumbnail_src;\n    });\n    if (items.length == 0) {\n      return ;\n    }\n\n    const len = items.length;\n    const _this = this;\n    let getThumbnail = function(i) {\n      const curItem = items[i];\n      seafileAPI.getShareLinkThumbnail(token, curItem.file_path, thumbnailSize).then((res) => {\n        curItem.encoded_thumbnail_src = res.data.encoded_thumbnail_src;\n      }).catch((error) => {\n        // do nothing\n      }).then(() => {\n        if (i < len - 1) {\n          getThumbnail(++i);\n        } else {\n          // when done, `setState()`\n          _this.setState({\n            items: _this.state.items\n          });\n        }\n      });\n    };\n    getThumbnail(0);\n  }\n\n  renderPath = () => {\n    return (\n      <React.Fragment>\n        {zipped.map((item, index) => {\n          if (index != zipped.length - 1) {\n            return (\n              <React.Fragment key={index}>\n                <a href={`?p=${encodeURIComponent(item.path)}&mode=${mode}`} className=\"mx-1 ellipsis\" title={item.name}>{item.name}</a>\n                <span> / </span>\n              </React.Fragment>\n            );\n          }\n        })\n        }\n        <span className=\"ml-1 ellipsis\" title={zipped[zipped.length - 1].name}>{zipped[zipped.length - 1].name}</span>\n      </React.Fragment>\n    );\n  }\n\n  zipDownloadFolder = (folderPath) => {\n    if (!useGoFileserver) {\n      this.setState({\n        isZipDialogOpen: true,\n        zipFolderPath: folderPath\n      });\n    }\n    else {\n      seafileAPI.getShareLinkZipTask(token, folderPath).then((res) => {\n        const zipToken = res.data['zip_token'];\n        location.href = `${fileServerRoot}zip/${zipToken}`;\n      }).catch((error) => {\n        let errorMsg = Utils.getErrorMsg(error);\n        this.setState({\n          isLoading: false,\n          errorMsg: errorMsg\n        });\n      });\n    }\n  }\n\n  zipDownloadSelectedItems = () => {\n    if (!useGoFileserver) {\n      this.setState({\n        isZipDialogOpen: true,\n        zipFolderPath: relativePath,\n        selectedItems: this.state.items.filter(item => item.isSelected)\n          .map(item => item.file_name || item.folder_name)\n      });\n    }\n    else {\n      let target = this.state.items.filter(item => item.isSelected).map(item => item.file_name || item.folder_name);\n      seafileAPI.getShareLinkDirentsZipTask(token, relativePath, target).then((res) => {\n        const zipToken = res.data['zip_token'];\n        location.href = `${fileServerRoot}zip/${zipToken}`;\n      }).catch((error) => {\n        let errorMsg = Utils.getErrorMsg(error);\n        this.setState({\n          isLoading: false,\n          errorMsg: errorMsg\n        });\n      });\n    }\n  }\n\n  async getAsyncCopyMoveProgress() {\n    let { asyncCopyMoveTaskId } = this.state;\n    try {\n      let res = await seafileAPI.queryAsyncOperationProgress(asyncCopyMoveTaskId);\n      let data = res.data;\n      if (data.failed) {\n        let message = gettext('Failed to copy files to another library.');\n        toaster.danger(message);\n        this.setState({\n          asyncOperationProgress: 0,\n          isCopyMoveProgressDialogShow: false,\n        });\n        return;\n      }\n\n      if (data.successful) {\n        this.setState({\n          asyncOperationProgress: 0,\n          isCopyMoveProgressDialogShow: false,\n        });\n        let message = gettext('Successfully copied files to another library.');\n        toaster.success(message);\n        return;\n      }\n      // init state: total is 0\n      let asyncOperationProgress = !data.total ? 0 : parseInt((data.done/data.total * 100).toFixed(2));\n\n      this.getAsyncCopyMoveProgress();\n      this.setState({asyncOperationProgress: asyncOperationProgress});\n    } catch (error) {\n      this.setState({\n        asyncOperationProgress: 0,\n        isCopyMoveProgressDialogShow: false,\n      });\n    }\n  }\n\n  saveSelectedItems = () => {\n    this.setState({\n      isSaveSharedDirDialogShow: true,\n      itemsForSave: this.state.items.filter(item => item.isSelected)\n        .map(item => item.file_name || item.folder_name)\n    });\n  }\n\n  saveAllItems = () => {\n    this.setState({\n      isSaveSharedDirDialogShow: true,\n      itemsForSave: this.state.items\n        .map(item => item.file_name || item.folder_name)\n    });\n  }\n\n  toggleSaveSharedDirCancel = () => {\n    this.setState({\n      isSaveSharedDirDialogShow: false,\n      itemsForSave: []\n    });\n  }\n\n  handleSaveSharedDir = (destRepoID, dstPath) => {\n\n    const itemsForSave = this.state.itemsForSave;\n\n    seafileAPI.saveSharedDir(destRepoID, dstPath, token, relativePath, itemsForSave).then((res) => {\n      this.setState({\n        isSaveSharedDirDialogShow: false,\n        itemsForSave: [],\n        isCopyMoveProgressDialogShow: true,\n        asyncCopyMoveTaskId: res.data.task_id,\n        asyncOperatedFilesLength: itemsForSave.length,\n      }, () => {\n        this.getAsyncCopyMoveProgress();\n      });\n    }).catch((error) => {\n      let errMessage = Utils.getErrorMsg(error);\n      this.setState({errMessage: errMessage});\n    });\n  }\n\n  onProgressDialogToggle = () => {\n    let { asyncOperationProgress } = this.state;\n    if (asyncOperationProgress !== 100) {\n      let taskId = this.state.asyncCopyMoveTaskId;\n      seafileAPI.cancelCopyMoveOperation(taskId);\n    }\n\n    this.setState({\n      asyncOperationProgress: 0,\n      isCopyMoveProgressDialogShow: false,\n    });\n  }\n\n  closeZipDialog = () => {\n    this.setState({\n      isZipDialogOpen: false,\n      zipFolderPath: '',\n      selectedItems: []\n    });\n  }\n\n  // for image popup\n  prepareImageItem = (item) => {\n    const name = item.file_name;\n    const fileExt = name.substr(name.lastIndexOf('.') + 1).toLowerCase();\n    const isGIF = fileExt == 'gif';\n\n    let src;\n    const fileURL = `${siteRoot}d/${token}/files/?p=${encodeURIComponent(item.file_path)}`;\n    if (!isGIF) {\n      src = `${siteRoot}thumbnail/${token}/${thumbnailSizeForOriginal}${Utils.encodePath(item.file_path)}`;\n    } else {\n      src = `${fileURL}&raw=1`;\n    }\n\n    return {\n      'name': name,\n      'url': fileURL,\n      'src': src\n    };\n  }\n\n  showImagePopup = (curItem) => {\n    const items = this.state.items.filter((item) => {\n      return !item.is_dir && Utils.imageCheck(item.file_name);\n    });\n    const imageItems = items.map((item) => {\n      return this.prepareImageItem(item);\n    });\n\n    this.setState({\n      isImagePopupOpen: true,\n      imageItems: imageItems,\n      imageIndex: items.indexOf(curItem)\n    });\n  }\n\n  closeImagePopup = () => {\n    this.setState({\n      isImagePopupOpen: false\n    });\n  }\n\n  moveToPrevImage = () => {\n    const imageItemsLength = this.state.imageItems.length;\n    this.setState((prevState) => ({\n      imageIndex: (prevState.imageIndex + imageItemsLength - 1) % imageItemsLength\n    }));\n  }\n\n  moveToNextImage = () => {\n    const imageItemsLength = this.state.imageItems.length;\n    this.setState((prevState) => ({\n      imageIndex: (prevState.imageIndex + 1) % imageItemsLength\n    }));\n  }\n\n  toggleAllSelected = () => {\n    this.setState((prevState) => ({\n      isAllItemsSelected: !prevState.isAllItemsSelected,\n      items: this.state.items.map((item) => {\n        item.isSelected = !prevState.isAllItemsSelected;\n        return item;\n      })\n    }));\n  }\n\n  toggleItemSelected = (targetItem, isSelected) => {\n    this.setState({\n      items: this.state.items.map((item) => {\n        if (item === targetItem) {\n          item.isSelected = isSelected;\n        }\n        return item;\n      })\n    }, () => {\n      this.setState({\n        isAllItemsSelected: !this.state.items.some(item => !item.isSelected)\n      });\n    });\n  }\n\n  onUploadFile = (e) => {\n    e.nativeEvent.stopImmediatePropagation();\n    this.uploader.onFileUpload();\n  }\n\n  onFileUploadSuccess = (direntObject) => {\n    const { name, size } = direntObject;\n    const newItem = {\n      isSelected: false,\n      file_name: name,\n      file_path: Utils.joinPath(relativePath, name),\n      is_dir: false,\n      last_modified: moment().format(),\n      size: size\n    };\n    const folderItems = this.state.items.filter(item => { return item.is_dir; });\n    // put the new file as the first file\n    let items = Array.from(this.state.items);\n    items.splice(folderItems.length, 0, newItem);\n    this.setState({items: items});\n    seafileAPI.shareLinksUploadDone(token, Utils.joinPath(dirPath, name));\n  }\n\n  getShareLinkRepoTags = () => {\n    seafileAPI.getShareLinkRepoTags(token).then(res => {\n      let usedRepoTags = [];\n      res.data.repo_tags.forEach(item => {\n        let usedRepoTag = new RepoTag(item);\n        if (usedRepoTag.fileCount > 0) {\n          usedRepoTags.push(usedRepoTag);\n        }\n      });\n      this.setState({usedRepoTags: usedRepoTags});\n      if (usedRepoTags.length != 0 && relativePath == '/') {\n        this.setState({isRepoInfoBarShow: true});\n      }\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  render() {\n    const isDesktop = Utils.isDesktop();\n    const modeBaseClass = 'btn btn-secondary btn-icon sf-view-mode-btn';\n    return (\n      <React.Fragment>\n        <div className=\"h-100 d-flex flex-column\">\n          <div className=\"top-header d-flex justify-content-between\">\n            <a href={siteRoot}>\n              <img src={mediaUrl + logoPath} height={logoHeight} width={logoWidth} title={siteTitle} alt=\"logo\" />\n            </a>\n            {loginUser && <Account />}\n          </div>\n          <div className=\"o-auto\">\n            <div className=\"shared-dir-view-main\">\n              <h2 className=\"h3\">{dirName}</h2>\n              <p>{gettext('Shared by: ')}{sharedBy}</p>\n              <div className=\"d-flex justify-content-between align-items-center op-bar\">\n                <p className=\"m-0 mr-4 ellipsis d-flex align-items-center\"><span className=\"flex-none\">{gettext('Current path: ')}</span>{this.renderPath()}</p>\n                <div className=\"flex-none\">\n                  {isDesktop &&\n                  <div className=\"view-mode btn-group\">\n                    <a href={`?p=${encodeURIComponent(relativePath)}&mode=list`} className={`${modeBaseClass} sf2-icon-list-view ${mode == 'list' ? 'current-mode' : ''}`} title={gettext('List')} aria-label={gettext('List')}></a>\n                    <a href={`?p=${encodeURIComponent(relativePath)}&mode=grid`} className={`${modeBaseClass} sf2-icon-grid-view ${mode == 'grid' ? 'current-mode' : ''}`} title={gettext('Grid')} aria-label={gettext('Grid')}></a>\n                  </div>\n                  }\n                  {canUpload && (\n                    <Button disabled={noQuota}\n                      title={noQuota ? gettext('The owner of this library has run out of space.') : ''}\n                      onClick={this.onUploadFile} className=\"ml-2 shared-dir-op-btn shared-dir-upload-btn\">{gettext('Upload')}</Button>\n                  )}\n                  {showDownloadIcon &&\n                  <Fragment>\n                    {this.state.items.some(item => item.isSelected) ?\n                      <Fragment>\n                        <Button color=\"success\" onClick={this.zipDownloadSelectedItems} className=\"ml-2 shared-dir-op-btn\">{gettext('ZIP Selected Items')}</Button>\n                        {(canDownload && loginUser && (loginUser !== sharedBy)) &&\n                        <Button color=\"success\" onClick={this.saveSelectedItems} className=\"ml-2 shared-dir-op-btn\">{gettext('Save Selected Items')}</Button>\n                        }\n                      </Fragment>\n                      :\n                      <Fragment>\n                        <Button color=\"success\" onClick={this.zipDownloadFolder.bind(this, relativePath)} className=\"ml-2 shared-dir-op-btn\">{gettext('ZIP')}</Button>\n                        {(canDownload && loginUser && (loginUser !== sharedBy)) &&\n                        <Button color=\"success\" onClick={this.saveAllItems} className=\"ml-2 shared-dir-op-btn\">{gettext('Save')}</Button>\n                        }\n                      </Fragment>\n                    }\n                  </Fragment>\n                  }\n                </div>\n              </div>\n              {!noQuota && canUpload && (\n                <FileUploader\n                  ref={uploader => this.uploader = uploader}\n                  dragAndDrop={false}\n                  token={token}\n                  path={dirPath === '/' ? dirPath : dirPath.replace(/\\/+$/, '')}\n                  relativePath={relativePath === '/' ? relativePath : relativePath.replace(/\\/+$/, '')}\n                  repoID={repoID}\n                  onFileUploadSuccess={this.onFileUploadSuccess}\n                />\n              )}\n\n              {this.state.isRepoInfoBarShow && (\n                <RepoInfoBar\n                  repoID={repoID}\n                  currentPath={'/'}\n                  usedRepoTags={this.state.usedRepoTags}\n                  shareLinkToken={token}\n                  enableFileDownload={showDownloadIcon}\n                  className=\"mx-0\"\n                />\n              )}\n\n              <Content\n                isDesktop={isDesktop}\n                isLoading={this.state.isLoading}\n                errorMsg={this.state.errorMsg}\n                items={this.state.items}\n                sortBy={this.state.sortBy}\n                sortOrder={this.state.sortOrder}\n                sortItems={this.sortItems}\n                isAllItemsSelected={this.state.isAllItemsSelected}\n                toggleAllSelected={this.toggleAllSelected}\n                toggleItemSelected={this.toggleItemSelected}\n                zipDownloadFolder={this.zipDownloadFolder}\n                showImagePopup={this.showImagePopup}\n              />\n            </div>\n          </div>\n        </div>\n        {this.state.isZipDialogOpen &&\n        <ModalPortal>\n          <ZipDownloadDialog\n            token={token}\n            path={this.state.zipFolderPath}\n            target={this.state.selectedItems}\n            toggleDialog={this.closeZipDialog}\n          />\n        </ModalPortal>\n        }\n        {this.state.isSaveSharedDirDialogShow &&\n          <SaveSharedDirDialog\n            sharedToken={token}\n            parentDir={relativePath}\n            items={this.state.itemsForSave}\n            toggleCancel={this.toggleSaveSharedDirCancel}\n            handleSaveSharedDir={this.handleSaveSharedDir}\n          />\n        }\n        {this.state.isCopyMoveProgressDialogShow && (\n          <CopyMoveDirentProgressDialog\n            type='copy'\n            asyncOperatedFilesLength={this.state.asyncOperatedFilesLength}\n            asyncOperationProgress={this.state.asyncOperationProgress}\n            toggleDialog={this.onProgressDialogToggle}\n          />\n        )}\n        {this.state.isImagePopupOpen &&\n        <ModalPortal>\n          <ImageDialog\n            imageItems={this.state.imageItems}\n            imageIndex={this.state.imageIndex}\n            closeImagePopup={this.closeImagePopup}\n            moveToPrevImage={this.moveToPrevImage}\n            moveToNextImage={this.moveToNextImage}\n          />\n        </ModalPortal>\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nclass Content extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  sortByName = (e) => {\n    e.preventDefault();\n    const sortBy = 'name';\n    const sortOrder = this.props.sortOrder == 'asc' ? 'desc' : 'asc';\n    this.props.sortItems(sortBy, sortOrder);\n  }\n\n  sortByTime = (e) => {\n    e.preventDefault();\n    const sortBy = 'time';\n    const sortOrder = this.props.sortOrder == 'asc' ? 'desc' : 'asc';\n    this.props.sortItems(sortBy, sortOrder);\n  }\n\n  sortBySize = (e) => {\n    e.preventDefault();\n    const sortBy = 'size';\n    const sortOrder = this.props.sortOrder == 'asc' ? 'desc' : 'asc';\n    this.props.sortItems(sortBy, sortOrder);\n  }\n\n  render() {\n    const {\n      isDesktop,\n      isLoading, errorMsg, items,\n      sortBy, sortOrder,\n      isAllItemsSelected\n    } = this.props;\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    if (errorMsg) {\n      return <p className=\"error mt-6 text-center\">{errorMsg}</p>;\n    }\n\n    const tbody = (\n      <tbody>\n        {items.map((item, index) => {\n          return <Item\n            key={index}\n            isDesktop={isDesktop}\n            item={item}\n            zipDownloadFolder={this.props.zipDownloadFolder}\n            showImagePopup={this.props.showImagePopup}\n            toggleItemSelected={this.props.toggleItemSelected}\n          />;\n        })}\n      </tbody>\n    );\n\n    if (!isDesktop) {\n      return (\n        <table className=\"table-hover table-thead-hidden\">\n          <thead>\n            <tr>\n              <th width=\"12%\"></th>\n              <th width=\"80%\"></th>\n              <th width=\"8%\"></th>\n            </tr>\n          </thead>\n          {tbody}\n        </table>\n      );\n    }\n\n    const sortIcon = <span className={`fas ${sortOrder == 'asc' ? 'fa-caret-up' : 'fa-caret-down'}`}></span>;\n    return mode == 'list' ? (\n      <table className=\"table-hover\">\n        <thead>\n          <tr>\n            {showDownloadIcon &&\n            <th width=\"3%\" className=\"text-center\">\n              <input type=\"checkbox\" checked={isAllItemsSelected} onChange={this.props.toggleAllSelected} />\n            </th>\n            }\n            <th width=\"5%\"></th>\n            <th width={showDownloadIcon ? '50%' : '53%'}><a className=\"d-block table-sort-op\" href=\"#\" onClick={this.sortByName}>{gettext('Name')} {sortBy == 'name' && sortIcon}</a></th>\n            <th width=\"8%\"></th>\n            <th width=\"14%\"><a className=\"d-block table-sort-op\" href=\"#\" onClick={this.sortBySize}>{gettext('Size')} {sortBy == 'size' && sortIcon}</a></th>\n            <th width=\"13%\"><a className=\"d-block table-sort-op\" href=\"#\" onClick={this.sortByTime}>{gettext('Last Update')} {sortBy == 'time' && sortIcon}</a></th>\n            <th width=\"7%\"></th>\n          </tr>\n        </thead>\n        {tbody}\n      </table>\n    ) : (\n      <ul className=\"grid-view\">\n        {items.map((item, index) => {\n          return <GridItem\n            key={index}\n            item={item}\n            zipDownloadFolder={this.props.zipDownloadFolder}\n            showImagePopup={this.props.showImagePopup}\n          />;\n        })}\n      </ul>\n    );\n  }\n}\n\nclass Item extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isIconShown: false,\n      isOpMenuOpen: false\n    };\n  }\n\n  toggleOpMenu = () => {\n    this.setState({isOpMenuOpen: !this.state.isOpMenuOpen});\n  }\n\n  handleMouseOver = () => {\n    this.setState({isIconShown: true});\n  }\n\n  handleMouseOut = () => {\n    this.setState({isIconShown: false});\n  }\n\n  zipDownloadFolder = (e) => {\n    e.preventDefault();\n    this.props.zipDownloadFolder.bind(this, this.props.item.folder_path)();\n  }\n\n  handleFileClick = (e) => {\n    const item = this.props.item;\n    if (!Utils.imageCheck(item.file_name)) {\n      return;\n    }\n\n    e.preventDefault();\n    this.props.showImagePopup(item);\n  }\n\n  toggleItemSelected = (e) => {\n    this.props.toggleItemSelected(this.props.item, e.target.checked);\n  }\n\n  render() {\n    const { item, isDesktop } = this.props;\n    const { isIconShown } = this.state;\n\n    let toolTipID = '';\n    let tagTitle = '';\n    if (item.file_tags && item.file_tags.length > 0) {\n      toolTipID = MD5(item.file_name).slice(0, 7);\n      tagTitle = item.file_tags.map(item => item.tag_name).join(' ');\n    }\n\n    if (item.is_dir) {\n      return isDesktop ? (\n        <tr onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut} onFocus={this.handleMouseOver}>\n          {showDownloadIcon &&\n            <td className=\"text-center\">\n              <input type=\"checkbox\" checked={item.isSelected} onChange={this.toggleItemSelected} />\n            </td>\n          }\n          <td className=\"text-center\"><img src={Utils.getFolderIconUrl()} alt=\"\" width=\"24\" /></td>\n          <td>\n            <a href={`?p=${encodeURIComponent(item.folder_path.substr(0, item.folder_path.length - 1))}&mode=${mode}`}>{item.folder_name}</a>\n          </td>\n          <td></td>\n          <td></td>\n          <td title={moment(item.last_modified).format('llll')}>{moment(item.last_modified).fromNow()}</td>\n          <td>\n            {showDownloadIcon &&\n            <a role=\"button\" className={`action-icon sf2-icon-download${isIconShown ? '' : ' invisible'}`} href=\"#\" onClick={this.zipDownloadFolder} title={gettext('Download')} aria-label={gettext('Download')}>\n            </a>\n            }\n          </td>\n        </tr>\n      ) : (\n        <tr>\n          <td className=\"text-center\"><img src={Utils.getFolderIconUrl()} alt=\"\" width=\"24\" /></td>\n          <td>\n            <a href={`?p=${encodeURIComponent(item.folder_path.substr(0, item.folder_path.length - 1))}&mode=${mode}`}>{item.folder_name}</a>\n            <br />\n            <span className=\"item-meta-info\">{moment(item.last_modified).fromNow()}</span>\n          </td>\n          <td>\n            {showDownloadIcon &&\n            <Dropdown isOpen={this.state.isOpMenuOpen} toggle={this.toggleOpMenu}>\n              <DropdownToggle\n                tag=\"i\"\n                className=\"sf-dropdown-toggle fa fa-ellipsis-v ml-0\"\n                title={gettext('More Operations')}\n                data-toggle=\"dropdown\"\n                aria-expanded={this.state.isOpMenuOpen}\n              />\n              <div className={this.state.isOpMenuOpen ? '' : 'd-none'} onClick={this.toggleOpMenu}>\n                <div className=\"mobile-operation-menu-bg-layer\"></div>\n                <div className=\"mobile-operation-menu\">\n                  <DropdownItem className=\"mobile-menu-item\" onClick={this.zipDownloadFolder}>{gettext('Download')}</DropdownItem>\n                </div>\n              </div>\n            </Dropdown>\n            }\n          </td>\n        </tr>\n      );\n    } else {\n      const fileURL = `${siteRoot}d/${token}/files/?p=${encodeURIComponent(item.file_path)}`;\n      const thumbnailURL = item.encoded_thumbnail_src ? `${siteRoot}${item.encoded_thumbnail_src}` : '';\n      return isDesktop ? (\n        <tr onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut} onFocus={this.handleMouseOver}>\n          {showDownloadIcon &&\n            <td className=\"text-center\">\n              <input type=\"checkbox\" checked={item.isSelected} onChange={this.toggleItemSelected} />\n            </td>\n          }\n          <td className=\"text-center\">\n            {thumbnailURL ?\n              <img className=\"thumbnail\" src={thumbnailURL} alt=\"\" /> :\n              <img src={Utils.getFileIconUrl(item.file_name)} alt=\"\" width=\"24\" />\n            }\n          </td>\n          <td>\n            <a href={fileURL} onClick={this.handleFileClick}>{item.file_name}</a>\n          </td>\n          <td className=\"tag-list-title\">\n            {(item.file_tags && item.file_tags.length > 0) && (\n              <Fragment>\n                <div id={`tag-list-title-${toolTipID}`} className=\"dirent-item tag-list tag-list-stacked\">\n                  {item.file_tags.map((fileTag, index) => {\n                    let length = item.file_tags.length;\n                    return (\n                      <span className=\"file-tag\" key={fileTag.file_tag_id} style={{zIndex:length - index, backgroundColor:fileTag.tag_color}}></span>\n                    );\n                  })}\n                </div>\n                <UncontrolledTooltip target={`tag-list-title-${toolTipID}`} placement=\"bottom\">\n                  {tagTitle}\n                </UncontrolledTooltip>\n              </Fragment>\n            )}\n          </td>\n          <td>{Utils.bytesToSize(item.size)}</td>\n          <td title={moment(item.last_modified).format('llll')}>{moment(item.last_modified).fromNow()}</td>\n          <td>\n            {showDownloadIcon &&\n            <a className={`action-icon sf2-icon-download${isIconShown ? '' : ' invisible'}`} href={`${fileURL}&dl=1`} title={gettext('Download')} aria-label={gettext('Download')}></a>\n            }\n          </td>\n        </tr>\n      ) : (\n        <tr>\n          <td className=\"text-center\">\n            {thumbnailURL ?\n              <img className=\"thumbnail\" src={thumbnailURL} alt=\"\" /> :\n              <img src={Utils.getFileIconUrl(item.file_name)} alt=\"\" width=\"24\" />\n            }\n          </td>\n          <td>\n            <a href={fileURL} onClick={this.handleFileClick}>{item.file_name}</a>\n            <br />\n            <span className=\"item-meta-info\">{Utils.bytesToSize(item.size)}</span>\n            <span className=\"item-meta-info\">{moment(item.last_modified).fromNow()}</span>\n          </td>\n          <td>\n            {showDownloadIcon &&\n            <Dropdown isOpen={this.state.isOpMenuOpen} toggle={this.toggleOpMenu}>\n              <DropdownToggle\n                tag=\"i\"\n                className=\"sf-dropdown-toggle fa fa-ellipsis-v ml-0\"\n                title={gettext('More Operations')}\n                data-toggle=\"dropdown\"\n                aria-expanded={this.state.isOpMenuOpen}\n              />\n              <div className={this.state.isOpMenuOpen ? '' : 'd-none'} onClick={this.toggleOpMenu}>\n                <div className=\"mobile-operation-menu-bg-layer\"></div>\n                <div className=\"mobile-operation-menu\">\n                  <DropdownItem className=\"mobile-menu-item\" tag=\"a\" href={`${fileURL}&dl=1`}>{gettext('Download')}</DropdownItem>\n                </div>\n              </div>\n            </Dropdown>\n            }\n          </td>\n        </tr>\n      );\n    }\n  }\n}\n\nclass GridItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isIconShown: false\n    };\n  }\n\n  handleMouseOver = () => {\n    this.setState({isIconShown: true});\n  }\n\n  handleMouseOut = () => {\n    this.setState({isIconShown: false});\n  }\n\n  zipDownloadFolder = (e) => {\n    e.preventDefault();\n    this.props.zipDownloadFolder.bind(this, this.props.item.folder_path)();\n  }\n\n  handleFileClick = (e) => {\n    const item = this.props.item;\n    if (!Utils.imageCheck(item.file_name)) {\n      return;\n    }\n\n    e.preventDefault();\n    this.props.showImagePopup(item);\n  }\n\n  render() {\n    const item = this.props.item;\n    const { isIconShown } = this.state;\n\n    if (item.is_dir) {\n      const folderURL = `?p=${encodeURIComponent(item.folder_path.substr(0, item.folder_path.length - 1))}&mode=${mode}`;\n      return (\n        <li className=\"grid-item\" onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut} onFocus={this.handleMouseOver}>\n          <a href={folderURL} className=\"grid-file-img-link d-block\">\n            <img src={Utils.getFolderIconUrl(false, 192)} alt=\"\" width=\"96\" height=\"96\" />\n          </a>\n          <a href={folderURL} className=\"grid-file-name grid-file-name-link\">{item.folder_name}</a>\n          {showDownloadIcon &&\n            <a role=\"button\" className={`action-icon sf2-icon-download${isIconShown ? '' : ' invisible'}`} href=\"#\" onClick={this.zipDownloadFolder} title={gettext('Download')} aria-label={gettext('Download')}>\n            </a>\n          }\n        </li>\n      );\n    } else {\n      const fileURL = `${siteRoot}d/${token}/files/?p=${encodeURIComponent(item.file_path)}`;\n      const thumbnailURL = item.encoded_thumbnail_src ? `${siteRoot}${item.encoded_thumbnail_src}` : '';\n      return (\n        <li className=\"grid-item\" onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut} onFocus={this.handleMouseOver}>\n          <a href={fileURL} className=\"grid-file-img-link d-block\" onClick={this.handleFileClick}>\n            {thumbnailURL ?\n              <img className=\"thumbnail\" src={thumbnailURL} alt=\"\" /> :\n              <img src={Utils.getFileIconUrl(item.file_name, 192)} alt=\"\" width=\"96\" height=\"96\" />\n            }\n          </a>\n          <a href={fileURL} className=\"grid-file-name grid-file-name-link\" onClick={this.handleFileClick}>{item.file_name}</a>\n          {showDownloadIcon &&\n            <a className={`action-icon sf2-icon-download${isIconShown ? '' : ' invisible'}`} href={`${fileURL}&dl=1`} title={gettext('Download')} aria-label={gettext('Download')}>\n            </a>\n          }\n        </li>\n      );\n    }\n  }\n}\n\nReactDom.render(<SharedDirView />, document.getElementById('wrapper'));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { gettext, fileServerRoot } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport Loading from '../loading';\n\nconst propTypes = {\n  token: PropTypes.string,\n  path: PropTypes.string.isRequired,\n  repoID: PropTypes.string,\n  target: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.array\n  ]),\n  toggleDialog: PropTypes.func.isRequired\n};\n\nlet interval;\n\nclass ZipDownloadDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      errorMsg: '',\n      zipProgress: null\n    };\n  }\n\n  componentDidMount() {\n    const { token, path, repoID, target } = this.props;\n    let getZipTask;\n    if (token) {\n      getZipTask = target.length ?\n        seafileAPI.getShareLinkDirentsZipTask(token, path, target) :\n        seafileAPI.getShareLinkZipTask(token, path);\n    } else {\n      getZipTask = seafileAPI.zipDownload(repoID, path, target);\n    }\n    getZipTask.then((res) => {\n      const zipToken = res.data['zip_token'];\n      this.setState({\n        isLoading: false,\n        errorMsg: '',\n        zipToken: zipToken\n      });\n      this.queryZipProgress();\n      interval = setInterval(this.queryZipProgress, 1000);\n    }).catch((error) => {\n      let errorMsg = Utils.getErrorMsg(error);\n      this.setState({\n        isLoading: false,\n        errorMsg: errorMsg\n      });\n    });\n  }\n\n  queryZipProgress = () => {\n    const zipToken = this.state.zipToken;\n    seafileAPI.queryZipProgress(zipToken).then((res) => {\n      const data = res.data;\n      if (data.failed == 1) {\n        clearInterval(interval);\n        this.setState({\n          isLoading: false,\n          errorMsg: data.failed_reason\n        });\n      } else {\n        this.setState({\n          zipProgress: data.total == 0 ? '100%' : (data.zipped/data.total*100).toFixed(2) + '%'\n        });\n        if (data['total'] == data['zipped']) {\n          clearInterval(interval);\n          this.props.toggleDialog();\n          location.href = `${fileServerRoot}zip/${zipToken}`;\n        }\n      }\n    }).catch((error) => {\n      clearInterval(interval);\n      let errorMsg = Utils.getErrorMsg(error);\n      this.setState({\n        isLoading: false,\n        errorMsg: errorMsg\n      });\n    });\n  }\n\n  cancelZipTask = () => {\n    const zipToken = this.state.zipToken;\n    seafileAPI.cancelZipTask(zipToken).then((res) => {\n    // do nothing\n    }).catch((error) => {\n    // do nothing\n    });\n  }\n\n  toggleDialog = () => {\n    const zipProgress = this.state.zipProgress;\n    if (zipProgress && zipProgress != '100%') {\n      clearInterval(interval);\n      this.cancelZipTask();\n    }\n    this.props.toggleDialog();\n  }\n\n  render() {\n    return (\n      <Modal isOpen={true} toggle={this.toggleDialog}>\n        <ModalHeader toggle={this.toggleDialog}>{gettext('Download')}</ModalHeader>\n        <ModalBody>\n          <Content data={this.state} />\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\nclass Content extends React.Component {\n\n  render() {\n    const {isLoading, errorMsg, zipProgress} = this.props.data;\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    if (errorMsg) {\n      return <p className=\"error mt-4 text-center\">{errorMsg}</p>;\n    }\n\n    return <p className=\"mt-4 text-center\">{`${gettext('Packaging...')} ${zipProgress}`}</p>;\n  }\n}\n\nZipDownloadDialog.propTypes = propTypes;\n\nexport default ZipDownloadDialog;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { gettext } from '../../utils/constants';\n\nimport Lightbox from '@seafile/react-image-lightbox';\nimport '@seafile/react-image-lightbox/style.css';\n\nconst propTypes = {\n  imageItems: PropTypes.array.isRequired,\n  imageIndex: PropTypes.number.isRequired,\n  closeImagePopup: PropTypes.func.isRequired,\n  moveToPrevImage: PropTypes.func.isRequired,\n  moveToNextImage: PropTypes.func.isRequired\n};\n\nclass ImageDialog extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const imageItems = this.props.imageItems;\n    const imageIndex = this.props.imageIndex;\n    const imageItemsLength = imageItems.length;\n    const name = imageItems[imageIndex].name;\n    const imageTitle = `${name} (${imageIndex + 1}/${imageItemsLength})`;\n\n    return (\n      <Lightbox\n        imageTitle={imageTitle}\n        mainSrc={imageItems[imageIndex].src}\n        nextSrc={imageItems[(imageIndex + 1) % imageItemsLength].src}\n        prevSrc={imageItems[(imageIndex + imageItemsLength - 1) % imageItemsLength].src}\n        onCloseRequest={this.props.closeImagePopup}\n        onMovePrevRequest={this.props.moveToPrevImage}\n        onMoveNextRequest={this.props.moveToNextImage}\n        imagePadding={70}\n        imageLoadErrorMessage={gettext('The image could not be loaded.')}\n        prevLabel={gettext('Previous (Left arrow key)')}\n        nextLabel={gettext('Next (Right arrow key)')}\n        closeLabel={gettext('Close (Esc)')}\n        zoomInLabel={gettext('Zoom in')}\n        zoomOutLabel={gettext('Zoom out')}\n      />\n    );\n  }\n}\n\nImageDialog.propTypes = propTypes;\n\nexport default ImageDialog;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport moment from 'moment';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\n\nconst propTypes = {\n  repoID: PropTypes.string.isRequired,\n  currentTag: PropTypes.object.isRequired,\n  toggleCancel: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  updateUsedRepoTags: PropTypes.func,\n  onFileTagChanged: PropTypes.func,\n  shareLinkToken: PropTypes.string,\n  enableFileDownload: PropTypes.bool\n};\n\nclass ListTaggedFilesDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      taggedFileList: [],\n    };\n  }\n\n  onFileTagChanged = (TaggedFile) => {\n    const path = TaggedFile.parent_path;\n    const dirent = {name: TaggedFile.filename};\n    let direntPath = path === '/' ? path + TaggedFile.filename : path + '/' + TaggedFile.filename;\n    this.props.onFileTagChanged(dirent, direntPath);\n  }\n\n  onDeleteTaggedFile = (taggedFile) => {\n    let repoID = this.props.repoID;\n    let fileTagID = taggedFile.file_tag_id;\n    seafileAPI.deleteFileTag(repoID, fileTagID).then(res => {\n      this.getTaggedFiles();\n      this.props.updateUsedRepoTags();\n      if ((this.props.onFileTagChanged) && !taggedFile.file_deleted) this.onFileTagChanged(taggedFile);\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  componentDidMount() {\n    this.getTaggedFiles();\n  }\n\n  getTaggedFiles = () => {\n    let { repoID, currentTag, shareLinkToken } = this.props;\n    let request = shareLinkToken ?\n      seafileAPI.getShareLinkTaggedFiles(shareLinkToken, currentTag.id) :\n      seafileAPI.listTaggedFiles(repoID, currentTag.id);\n    request.then(res => {\n      let taggedFileList = [];\n      res.data.tagged_files !== undefined &&\n      res.data.tagged_files.forEach(file => {\n        let taggedFile = file;\n        taggedFileList.push(taggedFile);\n      });\n      this.setState({\n        taggedFileList: taggedFileList,\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  render() {\n    let taggedFileList = this.state.taggedFileList;\n    return (\n      <Modal isOpen={true} style={{maxWidth: '678px'}}>\n        <ModalHeader toggle={this.props.onClose}>{gettext('Tagged Files')}</ModalHeader>\n        <ModalBody className=\"dialog-list-container\">\n          <table>\n            <thead>\n              <tr>\n                <th width='50%' className=\"ellipsis\">{gettext('Name')}</th>\n                <th width='20%'>{gettext('Size')}</th>\n                <th width='22%'>{gettext('Last Update')}</th>\n                <th width='8%'></th>\n              </tr>\n            </thead>\n            <tbody>\n              {taggedFileList.map((taggedFile, index) => {\n                return (\n                  <TaggedFile\n                    key={index}\n                    repoID={this.props.repoID}\n                    taggedFile={taggedFile}\n                    onDeleteTaggedFile={this.onDeleteTaggedFile}\n                    shareLinkToken={this.props.shareLinkToken}\n                    enableFileDownload={this.props.enableFileDownload}\n                  />\n                );\n              })}\n            </tbody>\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.props.toggleCancel}>{gettext('Close')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nListTaggedFilesDialog.propTypes = propTypes;\n\nexport default ListTaggedFilesDialog;\n\nconst TaggedFilePropTypes = {\n  repoID: PropTypes.string.isRequired,\n  taggedFile: PropTypes.object,\n  onDeleteTaggedFile: PropTypes.func.isRequired,\n  shareLinkToken: PropTypes.string,\n  enableFileDownload: PropTypes.bool\n};\n\nclass TaggedFile extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = ({\n      active: false,\n    });\n  }\n\n  onMouseEnter = () => {\n    this.setState({\n      active: true\n    });\n  }\n\n  onMouseLeave = () => {\n    this.setState({\n      active: false\n    });\n  }\n\n  deleteFile = (e) => {\n    e.preventDefault();\n    this.props.onDeleteTaggedFile(this.props.taggedFile);\n  }\n\n  render() {\n    const { taggedFile, shareLinkToken, enableFileDownload } = this.props;\n\n    let path = taggedFile.parent_path ? Utils.joinPath(taggedFile.parent_path, taggedFile.filename) : '';\n    let href = shareLinkToken ?\n      siteRoot + 'd/' + shareLinkToken + '/files/?p=' + Utils.encodePath(path) :\n      siteRoot + 'lib/' + this.props.repoID + '/file' + Utils.encodePath(path);\n\n    return (\n      <tr onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave} onFocus={this.onMouseEnter}>\n        {taggedFile.file_deleted ?\n          <Fragment>\n            <td colSpan='3' className=\"name\">{taggedFile.filename}{' '}\n              <span style={{color:'red'}}>{gettext('deleted')}</span>\n            </td>\n          </Fragment>\n          :\n          <Fragment>\n            <td><a href={href} target='_blank' className=\"d-inline-block w-100 ellipsis\" title={taggedFile.filename} rel=\"noreferrer\">{taggedFile.filename}</a></td>\n            <td>{Utils.bytesToSize(taggedFile.size)}</td>\n            <td>{moment.unix(taggedFile.mtime).fromNow()}</td>\n          </Fragment>\n        }\n        <td>\n          {!shareLinkToken &&\n            <a href=\"#\" role=\"button\" aria-label={gettext('Delete')} title={gettext('Delete')} className={`action-icon sf2-icon-x3${this.state.active ? '' : ' invisible'}`} onClick={this.deleteFile}></a>\n          }\n          {(shareLinkToken && enableFileDownload) &&\n            <a className={`action-icon sf2-icon-download${this.state.active ? '' : ' invisible'}`} href={`${href}&dl=1`} title={gettext('Download')} aria-label={gettext('Download')}></a>\n          }\n        </td>\n      </tr>\n    );\n  }\n}\n\nTaggedFile.propTypes = TaggedFilePropTypes;\n","import moment from 'moment';\n\nclass Draft {\n\n  constructor(item) {\n    this.created = item.created_at;\n    this.createdStr = moment((new Date(item.created_at)).getTime()).format('YYYY-MM-DD HH:mm');\n    this.id = item.id;\n    this.ownerNickname = item.owner_nickname;\n    this.originRepoID = item.origin_repo_id;\n    this.draftFilePath = item.draft_file_path;\n  }\n}\n\nexport default Draft;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { gettext, siteRoot } from '../../utils/constants';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport moment from 'moment';\nimport editorUtilities from '../../utils/editor-utilities';\nimport toaster from '../../components/toast';\nimport { Utils } from '../../utils/utils';\nimport Draft from '../../models/draft';\n\nconst propTypes = {\n  repoID: PropTypes.string.isRequired,\n  toggle: PropTypes.func.isRequired,\n};\n\nclass ListRepoDraftsDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      drafts: [],\n    };\n  }\n\n  componentDidMount() {\n    seafileAPI.listRepoDrafts(this.props.repoID).then(res => {\n      let drafts = res.data.drafts.map(item => {\n        let draft = new Draft(item);\n        return draft;\n      });\n      this.setState({\n        drafts: drafts\n      });\n    });\n  }\n\n  onDeleteDraftItem = (draft) => {\n    editorUtilities.deleteDraft(draft.id).then(() => {\n      let drafts = this.state.drafts.filter(item => {\n        return item.id !== draft.id;\n      });\n      this.setState({drafts: drafts});\n      let msg = gettext('Successfully deleted draft %(draft)s.');\n      msg = msg.replace('%(draft)s', draft.draftFilePath);\n      toaster.success(msg);\n    }).catch(() => {\n      let msg = gettext('Failed to delete draft %(draft)s.');\n      msg = msg.replace('%(draft)s', draft.draftFilePath);\n      toaster.danger(msg);\n    });\n  }\n\n  toggle = () => {\n    this.props.toggle();\n  }\n\n  render() {\n    return (\n      <Modal isOpen={true}>\n        <ModalHeader toggle={this.toggle}>{gettext('Drafts')}</ModalHeader>\n        <ModalBody className=\"dialog-list-container\">\n          <table>\n            <thead>\n              <tr>\n                <th width='50%' className=\"ellipsis\">{gettext('Name')}</th>\n                <th width='20%'>{gettext('Owner')}</th>\n                <th width='20%'>{gettext('Last Update')}</th>\n                <th width='10%'></th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.drafts.map((item, index) => {\n                return (\n                  <DraftItem\n                    key={index}\n                    draftItem={item}\n                    onDeleteDraftItem={this.onDeleteDraftItem}\n                  />\n                );\n              })}\n            </tbody>\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.toggle}>{gettext('Close')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nListRepoDraftsDialog.propTypes = propTypes;\n\nexport default ListRepoDraftsDialog;\n\nconst DraftItemPropTypes = {\n  draftItem: PropTypes.object,\n  onDeleteDraftItem: PropTypes.func.isRequired,\n};\n\nclass DraftItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = ({\n      active: false,\n    });\n  }\n\n  onMouseEnter = () => {\n    this.setState({\n      active: true\n    });\n  }\n\n  onMouseLeave = () => {\n    this.setState({\n      active: false\n    });\n  }\n\n  render() {\n    const draftItem = this.props.draftItem;\n    let href = siteRoot + 'drafts/' + draftItem.id + '/';\n    let className = this.state.active ? 'action-icon sf2-icon-x3' : 'action-icon vh sf2-icon-x3';\n    return (\n      <tr onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave}>\n        <td className=\"name\">\n          <a href={href} target='_blank'>{Utils.getFileName(draftItem.draftFilePath)}</a>\n        </td>\n        <td>{draftItem.ownerNickname}</td>\n        <td>{moment(draftItem.createdStr).fromNow()}</td>\n        <td>\n          <i className={className} onClick={this.props.onDeleteDraftItem.bind(this, draftItem)}></i>\n        </td>\n      </tr>\n    );\n  }\n}\n\nDraftItem.propTypes = DraftItemPropTypes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { MarkdownViewer } from '@seafile/seafile-editor';\nimport Loading from '../../components/loading';\nimport { seafileAPI } from '../../utils/seafile-api';\nimport { gettext, mediaUrl } from '../../utils/constants';\nimport { Utils } from '../../utils/utils';\nimport toaster from '../toast';\n\nconst propTypes = {\n  repoID: PropTypes.string.isRequired,\n  filePath: PropTypes.string.isRequired,\n  fileName: PropTypes.string.isRequired,\n  href: PropTypes.string,\n  toggleCancel: PropTypes.func.isRequired,\n};\n\nclass ReadmeDialog extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      readmeContent: null,\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    seafileAPI.getFileDownloadLink(this.props.repoID, this.props.filePath).then(res => {\n      seafileAPI.getFileContent(res.data).then(res => {\n        this.setState({\n          readmeContent: res.data,\n          isLoading: false,\n        });\n      });\n    }).catch(error => {\n      let errMessage = Utils.getErrorMsg(error);\n      toaster.danger(errMessage);\n    });\n  }\n\n  render() {\n    return (\n      <Modal isOpen={true} toggle={this.props.toggleCancel} className=\"readme-dialog\" size=\"lg\">\n        <ModalHeader>{this.props.fileName}\n          <a className=\"readme-dialog-edit\" href={this.props.href} target='_blank'><i className=\"fa fa-pencil-alt\"></i></a>\n        </ModalHeader>\n        <ModalBody>\n          {this.state.isLoading ?\n            <Loading />:\n            <MarkdownViewer\n              markdownContent={this.state.readmeContent}\n              showTOC={false}\n              scriptSource={mediaUrl + 'js/mathjax/tex-svg.js'}\n            />\n          }\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.props.toggleCancel}>{gettext('Close')}</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nReadmeDialog.propTypes = propTypes;\n\nexport default ReadmeDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ModalPortal from './modal-portal';\nimport ListTaggedFilesDialog from './dialog/list-taggedfiles-dialog';\nimport ListRepoDraftsDialog from './dialog/list-repo-drafts-dialog';\nimport ReadmeDialog from './dialog/readme-dialog';\nimport { siteRoot, gettext } from '../utils/constants';\nimport { Utils } from '../utils/utils';\n\nimport '../css/repo-info-bar.css';\n\nconst propTypes = {\n  repoID: PropTypes.string.isRequired,\n  currentPath: PropTypes.string.isRequired,\n  usedRepoTags: PropTypes.array.isRequired,\n  readmeMarkdown: PropTypes.object,\n  draftCounts: PropTypes.number,\n  updateUsedRepoTags: PropTypes.func,\n  onFileTagChanged: PropTypes.func,\n  className: PropTypes.string,\n  shareLinkToken: PropTypes.string,\n  enableFileDownload: PropTypes.bool\n};\n\nclass RepoInfoBar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTag: null,\n      isListTaggedFileShow: false,\n      showRepoDrafts: false,\n      showReadmeDialog: false,\n    };\n  }\n\n  onListTaggedFiles = (currentTag) => {\n    this.setState({\n      currentTag: currentTag,\n      isListTaggedFileShow: !this.state.isListTaggedFileShow,\n    });\n  }\n\n  onCloseDialog = () => {\n    this.setState({\n      isListTaggedFileShow: false\n    });\n  }\n\n  toggleDrafts = () => {\n    this.setState({\n      showRepoDrafts: !this.state.showRepoDrafts\n    });\n  }\n\n  toggleReadme = () => {\n    this.setState({\n      showReadmeDialog: !this.state.showReadmeDialog\n    });\n  }\n\n  render() {\n    let { repoID, currentPath, usedRepoTags, readmeMarkdown, draftCounts, className } = this.props;\n\n    // to be compatible with the existing code\n    if (readmeMarkdown === undefined) {\n      readmeMarkdown = null;\n    }\n    if (draftCounts === undefined) {\n      draftCounts = 0;\n    }\n\n    let href = readmeMarkdown !== null ? siteRoot + 'lib/' + repoID + '/file' + Utils.joinPath(currentPath, readmeMarkdown.name) +  '?mode=edit' : '';\n    let filePath = readmeMarkdown !== null ? currentPath + readmeMarkdown.name : '';\n    return (\n      <div className={`repo-info-bar ${className ? className : ''}`}>\n        {usedRepoTags.length > 0 && (\n          <ul className=\"used-tag-list\">\n            {usedRepoTags.map((usedRepoTag) => {\n              return (\n                <li key={usedRepoTag.id} className=\"used-tag-item\">\n                  <span className=\"used-tag\" style={{backgroundColor:usedRepoTag.color}}></span>\n                  <span className=\"used-tag-name\" title={usedRepoTag.name}>{usedRepoTag.name}</span>\n                  <button type=\"button\" className=\"used-tag-files border-0 bg-transparent\" onClick={this.onListTaggedFiles.bind(this, usedRepoTag)}>\n                    {usedRepoTag.fileCount > 1 ? usedRepoTag.fileCount + ' files' : usedRepoTag.fileCount + ' file'}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n        <div className={(usedRepoTags.length > 0 && readmeMarkdown) ? 'file-info-list mt-1' : 'file-info-list'}>\n          {(readmeMarkdown !== null && parseInt(readmeMarkdown.size) > 1) &&\n            <span className=\"file-info\" onClick={this.toggleReadme}>\n              <span className=\"info-icon sf2-icon-readme\"></span>\n              <span className=\"used-tag-name\">{readmeMarkdown.name}</span>\n            </span>\n          }\n          {(readmeMarkdown !== null && parseInt(readmeMarkdown.size) < 2) &&\n            <span className=\"file-info\">\n              <span className=\"info-icon sf2-icon-readme\"></span>\n              <a className=\"used-tag-name\" href={href} target='_blank' rel=\"noreferrer\">{readmeMarkdown.name}</a>\n            </span>\n          }\n          {draftCounts > 0 &&\n            <span className=\"file-info\">\n              <span className=\"info-icon sf2-icon-drafts\"></span>\n              <span className=\"used-tag-name\">{gettext('draft')}</span>\n              <button type=\"button\" className=\"used-tag-files border-0 bg-transparent\" onClick={this.toggleDrafts}>\n                {draftCounts > 1 ? draftCounts + ' files' : draftCounts + ' file'}\n              </button>\n            </span>\n          }\n        </div>\n        {this.state.isListTaggedFileShow && (\n          <ModalPortal>\n            <ListTaggedFilesDialog\n              repoID={repoID}\n              currentTag={this.state.currentTag}\n              onClose={this.onCloseDialog}\n              toggleCancel={this.onListTaggedFiles}\n              updateUsedRepoTags={this.props.updateUsedRepoTags}\n              onFileTagChanged={this.props.onFileTagChanged}\n              shareLinkToken={this.props.shareLinkToken}\n              enableFileDownload={this.props.enableFileDownload}\n            />\n          </ModalPortal>\n        )}\n\n        {this.state.showRepoDrafts && (\n          <ModalPortal>\n            <ListRepoDraftsDialog\n              toggle={this.toggleDrafts}\n              repoID={this.props.repoID}\n            />\n          </ModalPortal>\n        )}\n\n        {this.state.showReadmeDialog && (\n          <ModalPortal>\n            <ReadmeDialog\n              toggleCancel={this.toggleReadme}\n              repoID={repoID}\n              filePath={filePath}\n              href={href}\n              fileName={readmeMarkdown.name}\n            />\n          </ModalPortal>\n        )}\n      </div>\n    );\n  }\n}\n\nRepoInfoBar.propTypes = propTypes;\n\nexport default RepoInfoBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { gettext } from '../../utils/constants';\n\nconst propTypes = {\n  type: PropTypes.oneOf(['move', 'copy']).isRequired,\n  asyncOperatedFilesLength: PropTypes.number.isRequired,\n  asyncOperationProgress: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  toggleDialog: PropTypes.func.isRequired,\n};\n\nclass CopyMoveDirentProgressDialog extends React.Component {\n\n  render() {\n\n    let { type , asyncOperationProgress, asyncOperatedFilesLength } = this.props;\n    let title = type === 'move' ? gettext('Move {num} items') : gettext('Copy {num} items');\n    title = title.replace('{num}', asyncOperatedFilesLength);\n    let progressStyle = {\n      width: asyncOperationProgress + '%',\n      lineHeight: '40px',\n      textAlign: 'left',\n    };\n    return (\n      <Modal isOpen={true}>\n        <ModalHeader toggle={this.props.toggleDialog}>{title}</ModalHeader>\n        <ModalBody style={{minHeight: '80px'}}>\n          <div className=\"progress\" style={{height: '40px'}}>\n            <div\n              className=\"progress-bar pl-2\"\n              role=\"progressbar\"\n              style={progressStyle}\n              aria-valuenow={asyncOperationProgress}\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n            >\n              {asyncOperationProgress + '%'}\n            </div>\n          </div>\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\nCopyMoveDirentProgressDialog.propTypes = propTypes;\n\nexport default CopyMoveDirentProgressDialog;\n"],"sourceRoot":""}